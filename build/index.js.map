{"version":3,"sources":["../index.js"],"names":["msg_types","Sphinx","MSG_TYPE","require","config","redis","storage","createClient","process","env","REDISCLOUD_URL","no_ready_check","initted","console","log","set","get","err","reply","toString","sphinxToken","SPHINX_TOKEN","init","client","Client","login","on","INSTALL","message","tribeId","feedData","episodeId","fetch","tribeData","Object","entries","key","value","episodes","embed","MessageEmbed","setAuthor","setDescription","setThumbnail","botSVG","channel","send","MESSAGE","arr","content","split","length","cmd","isAdmin","member","roles","find","role","name","TRIBE_URL","podurl","r","ok","json","j","setTitle","addFields"],"mappings":"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","sourcesContent":["import 'regenerator-runtime/runtime.js';\nimport * as Sphinx from 'sphinx-bot'\nimport * as fetch from 'node-fetch'\nconst msg_types = Sphinx.MSG_TYPE\nrequire('dotenv').config();\nvar redis = require('redis');\nvar storage = redis.createClient(process.env.REDISCLOUD_URL, {no_ready_check: true});\n\nlet initted = false\n\nconsole.log(\"bot connected\")\n\nstorage.set('foo', 'bar');\nstorage.get('foo', function (err, reply) {\n    console.log(reply.toString()); // Will print `bar`\n});\n\n/*\n// SPHINX_TOKEN contains id,secret,and url\n// message.channel.send sends to the url the data\n*/\n\nconst sphinxToken = process.env.SPHINX_TOKEN\n\n\n//ON INSTALL:\n//get tribe ID\n//plug tribe ID into https://tribes.sphinx.chat/tribes/ID\n//await fetch() from above url\n//pull feed_url from above url\n//plug feed_url into https://tribes.sphinx.chat/podcast?url=FEED_URL\n//pull \"episodes\" array, first object, id: number\n//store epidode ID number in object with storage.set(TRIBE_UUID, LATEST_EPISODE_ID)\n//send install message\n\n\n//EVERY FIVE MINUTES:\n// setInterval(function ()\n// {\n// }, 300000);\n//\n//const allKeys = storage.keys('*')\n\n//AsyncForEach:\n//  plug each tribe ID into https://tribes.sphinx.chat/tribes/ID\n//  await fetch() from above url\n//  pull feed_url from above url\n//  plug feed_url into https://tribes.sphinx.chat/podcast?url=FEED_URL\n//  pull \"episodes\" array, first object, id: number\n\n//  Check if episode ID matches stored ID\n//  IF YES: Return\n\n//  IF NOT: Replace with epidode ID number in object with storage.set(TRIBE_UUID, LATEST_EPISODE_ID)\n//  Send message to tribe announcing New Episode\n\n\n\n\n\nfunction init() {\n  if (initted) return\n  initted = true\n\n  console.log(\"Bot Connected\")\n\n  const client = new Sphinx.Client()\n  client.login(sphinxToken)\n\n  client.on(msg_types.INSTALL, async (message) => {\n    const tribeId = \"\"\n    let feedData = \"\"\n    let episodeId = \"\"\n\n    const tribeData = await fetch(`https://tribes.sphinx.chat/tribes/${tribeId}`)\n    for (const [key, value] of Object.entries(tribeData)) {\n      if(key===\"feed_url\") {\n        feedData = await fetch(`https://tribes.sphinx.chat/podcast?url=${value}`);\n        break\n      }\n    }\n    for (const [key, value] of Object.entries(feedData)) {\n      if(key==='episodes') {\n        const episodes = value\n        for (const [key, value] of Object.entries(episodes[0])) {\n          if(key==='id') {\n            episodeId = value;\n            break;\n          }\n        }\n      }\n    }\n\n    storage.set(tribeId, episodeId);\n\n    const embed = new Sphinx.MessageEmbed()\n      .setAuthor('PodBot')\n      .setDescription('Welcome to Pod Bot!')\n      .setThumbnail(botSVG)\n    message.channel.send({ embed })\n\n  })\n\n  \n  client.on(msg_types.MESSAGE, async (message) => {\n    const arr = message.content.split(' ')\n    if (arr.length < 2) return\n    if (arr[0] !== '/pod') return\n    const cmd = arr[1]\n\n    switch (cmd) {\n\n      case 'watch':\n        console.log(\"=> watch\")\n        const isAdmin = message.member.roles.find(role => role.name === 'Admin')\n        console.log('=> IS ADMIN?', isAdmin)\n        if(!isAdmin) return\n        try {\n          const r = await fetch(TRIBE_URL+'/podcast?url='+podurl)\n          if (!r.ok) return\n          const j = await r.json()\n          const embed = new Sphinx.MessageEmbed()\n            .setAuthor('PodBot')\n            .setTitle('Status:')\n            .setDescription('PodBot will notify your tribe when a new episode is released')\n            .setThumbnail(botSVG)\n          message.channel.send({ embed })\n        } catch (e) {\n          console.log('Pod bot error', e)\n        }\n        return\n\n      default:\n        const embed = new Sphinx.MessageEmbed()\n          .setAuthor('PodBot')\n          .setTitle('PodBot Commands:')\n          .addFields([\n            { name: 'Watch for new episodes', value: '/pod watch' },\n            { name: 'Help', value: '/pod help' }\n          ])\n          .setThumbnail(botSVG)\n        message.channel.send({ embed })\n        return\n    }\n  })\n}\n\nconst botSVG = `<svg viewBox=\"64 64 896 896\" height=\"12\" width=\"12\" fill=\"white\">\n  <path d=\"M300 328a60 60 0 10120 0 60 60 0 10-120 0zM852 64H172c-17.7 0-32 14.3-32 32v660c0 17.7 14.3 32 32 32h680c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-32 660H204V128h616v596zM604 328a60 60 0 10120 0 60 60 0 10-120 0zm250.2 556H169.8c-16.5 0-29.8 14.3-29.8 32v36c0 4.4 3.3 8 7.4 8h729.1c4.1 0 7.4-3.6 7.4-8v-36c.1-17.7-13.2-32-29.7-32zM664 508H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" />\n</svg>`\n\ninit()"],"file":"index.js"}